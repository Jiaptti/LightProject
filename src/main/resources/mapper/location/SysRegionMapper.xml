<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.viroyal.light.module.location.dao.SysRegionMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.viroyal.light.module.location.entity.SysRegion">
        <id column="id" property="id"/>
        <result column="common_region_id" property="commonRegionId"/>
        <result column="region_name" property="regionName"/>
        <result column="up_region_id" property="upRegionId"/>
        <result column="region_desc" property="regionDesc"/>
        <result column="postalcode" property="postalcode"/>
        <result column="exist" property="exist"/>
    </resultMap>

    <!-- 查询所有城市 -->
    <select id="queryAllCity" resultMap="BaseResultMap">
		select region.id, region.common_region_id, region.region_name, region.postalcode  from sys_region as region
		where region.region_name like '%市'
		and region.exist = 1
		order by region.id asc
	</select>

    <!-- 查询所有区 -->
    <select id="queryAllArea" resultMap="BaseResultMap">
		select distinct region.id, region.common_region_id, region.region_name,region.up_region_id, region.postalcode
		from sys_region as region
		left join sys_region sr on region.up_region_id = sr.common_region_id
		where region.region_name like '%区'
		and region.exist = 1 and sr.exist = 1
		order by region.id asc
	</select>

    <!-- 查询所有街道 -->
    <select id="queryAllStreet" resultMap="BaseResultMap">
		select distinct region.id, region.common_region_id, region.region_name,region.up_region_id, region.postalcode
		from sys_region as region
        left join sys_region as sr on region.up_region_id = sr.common_region_id
        left join sys_region as ssr on sr.up_region_id = ssr.common_region_id
		where region.region_name like '%街道'
		and region.exist = 1 and sr.exist = 1 and ssr.exist = 1
        order by region.id asc
	</select>

    <!-- 通过城市查询区 -->
    <select id="queryAreaByCity" parameterType="Long" resultMap="BaseResultMap">
		select distinct region.id, region.common_region_id, region.region_name,region.up_region_id, region.postalcode
		from sys_region as region
		left join sys_region as sr on region.up_region_id = sr.common_region_id
		where region.region_name like '%区' and region.up_region_id = #{cityId}
		and region.exist = 1 and sr.exist = 1
		order by region.id asc
	</select>

    <!-- 通过区查询街道 -->
    <select id="queryStreetByArea" parameterType="Long" resultMap="BaseResultMap">
		select distinct region.id, region.common_region_id, region.region_name,region.up_region_id, region.postalcode
		from sys_region as region
		left join sys_region as sr on region.up_region_id = sr.common_region_id
        left join sys_region as ssr on sr.up_region_id = ssr.common_region_id
		where region.up_region_id = #{areaId}  and region.region_desc = '街道'
		and region.exist = 1 and sr.exist = 1 and ssr.exist = 1
		order by region.id asc
	</select>

    <!-- 通过区查询街道数 -->
    <select id="queryOneStreet" parameterType="Long" resultMap="BaseResultMap">
        select region.common_region_id from sys_region as region left join sys_region as sr on region.up_region_id = sr.common_region_id
        left join sys_region as ssr on sr.up_region_id = ssr.common_region_id
        where region.up_region_id = #{areaId}  and region.region_desc = '街道'
        and region.exist = 1 and sr.exist = 1 and ssr.exist = 1
        order by region.id desc LIMIT 1
    </select>

    <!-- 街道是否存在 -->
    <select id="queryStreet" resultMap="BaseResultMap">
        select region.id, region.common_region_id, region.region_name,region.up_region_id, region.postalcode
        from sys_region as region
        left join sys_region as sr on region.up_region_id = sr.common_region_id
        left join sys_region as ssr on sr.up_region_id = ssr.common_region_id
        where region.up_region_id = #{areaId} and region.region_name = #{streetName}
        and region.exist = 1 and sr.exist = 1 and ssr.exist = 1
        order by region.id asc
    </select>

    <!-- 通过条件查询街道 -->
    <select id="queryWithCondition" resultMap="BaseResultMap">
        select DISTINCT region.id, region.common_region_id, region.region_name, region.region_desc,
        region.up_region_id, region.postalcode
        from sys_region as region
        left join sys_region as sr on region.up_region_id = sr.common_region_id
        left join sys_region as ssr on sr.up_region_id = ssr.common_region_id
        left join sys_light_info as i
        on i.street_id = region.common_region_id
        where 1 = 1 and region.region_desc = '街道' and region.exist = 1
        and sr.exist = 1 and ssr.exist = 1
        <if test="cityId != null"> and region.common_region_id like CONCAT(#{cityId}, '%')</if>
        <if test="cityName != null"> and region.region_name = #{cityName} </if>
        <if test="areaId != null"> and region.up_region_id = #{areaId}</if>
        <if test="areaName != null"> and region.region_name = #{areaName} </if>
        <if test="streetName != null"> and region.region_name like CONCAT(#{streetName}, '%')</if>
        <if test="userId != null"> and i.user_id = #{userId} and i.exist = 1</if>
        <if test="sort == 'asc' "> order by region.id asc</if>
        <if test="sort == 'desc' "> order by region.id desc</if>
    </select>

    <!-- 添加地区 -->
    <insert id="save" parameterType="com.viroyal.light.module.location.entity.SysRegion"
            useGeneratedKeys="true" keyProperty="id">
		insert into sys_region
		(
		`id`,
		`common_region_id`,
		`region_name`,
		`up_region_id`,
		`region_desc`,
		`postalcode`
		)
		values
		(
		#{id},
		#{commonRegionId},
		#{regionName},
		#{upRegionId},
		#{regionDesc},
		#{postalcode}
		)
	</insert>

    <!-- 通过id更新区信息 -->
    <update id="update" parameterType="com.viroyal.light.module.location.entity.SysRegion">
        update sys_region
        <set>
            <if test="commonRegionId != null">`common_region_id` = #{commonRegionId},</if>
            <if test="upRegionId != null">`up_region_id` = #{upRegionId},</if>
            <if test="regionName != null">`region_name` = #{regionName},</if>
            <if test="regionDesc != null">`region_desc` = #{regionDesc},</if>
            <if test="postalcode != null">`postalcode` = #{postalcode}</if>
        </set>
        where id = #{id}
    </update>

    <update id="deleteBatch">
        update sys_region as region set region.exist = 0 where region.id in
        <foreach item="regionId" collection="array" open="(" separator="," close=")">
            ${regionId}
        </foreach>
        ;
        update sys_region as region, sys_region as sr
        set sr.exist = 0, region.exist = 0
        where  sr.up_region_id = region.common_region_id and region.id in
        <foreach item="regionId" collection="array" open="(" separator="," close=")">
            ${regionId}
        </foreach>
        ;
        update sys_region as region,
        sys_region as sr,
        sys_region as ssr
        set sr.exist = 0, region.exist = 0, ssr.exist = 0
        where ssr.up_region_id = sr.common_region_id
        and sr.up_region_id = region.common_region_id
        and region.id in
        <foreach item="regionId" collection="array" open="(" separator="," close=")">
            ${regionId}
        </foreach>
        ;
        update sys_light_info as info, sys_region as region set info.street_id = 0
        where info.street_id = region.common_region_id and region.id in
        <foreach item="regionId" collection="array" open="(" separator="," close=")">
            ${regionId}
        </foreach>
        ;
        update sys_light_info as info,
        sys_region as region,
        sys_region as sr
        set info.street_id = 0
        where info.street_id = sr.common_region_id
        and sr.up_region_id = region.common_region_id
        and region.id in
        <foreach item="regionId" collection="array" open="(" separator="," close=")">
            ${regionId}
        </foreach>
        ;
        update sys_light_info as info,
        sys_region as region,
        sys_region as sr,
        sys_region as ssr
        set info.street_id = 0
        where info.street_id = ssr.common_region_id
        and ssr.up_region_id = sr.common_region_id
        and sr.up_region_id = region.common_region_id
        and region.id in
        <foreach item="regionId" collection="array" open="(" separator="," close=")">
        ${regionId}
        </foreach>
    </update>

</mapper>
